/*! tailwindcss v4.0.12 | MIT License | https://tailwindcss.com */
.visible {
  visibility: visible;
}
.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}
.fixed {
  position: fixed;
}
.relative {
  position: relative;
}
.sticky {
  position: sticky;
}
.z-10 {
  z-index: 10;
}
.container {
  width: 100%;
}
.mx-auto {
  margin-inline: auto;
}
.ml-auto {
  margin-left: auto;
}
.line-clamp-2 {
  overflow: hidden;
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 2;
}
.block {
  display: block;
}
.flex {
  display: flex;
}
.hidden {
  display: none;
}
.inline-flex {
  display: inline-flex;
}
.field-sizing-content {
  field-sizing: content;
}
.aspect-square {
  aspect-ratio: 1 / 1;
}
.size-full {
  width: 100%;
  height: 100%;
}
.h-\[calc\(100vh-350px\)\] {
  height: calc(100vh - 350px);
}
.h-full {
  height: 100%;
}
.min-h-screen {
  min-height: 100vh;
}
.w-fit {
  width: fit-content;
}
.w-full {
  width: 100%;
}
.max-w-\[80\%\] {
  max-width: 80%;
}
.flex-1 {
  flex: 1;
}
.shrink-0 {
  flex-shrink: 0;
}
.cursor-pointer {
  cursor: pointer;
}
.resize-y {
  resize: vertical;
}
.flex-col {
  flex-direction: column;
}
.items-center {
  align-items: center;
}
.items-start {
  align-items: flex-start;
}
.justify-between {
  justify-content: space-between;
}
.justify-center {
  justify-content: center;
}
.justify-end {
  justify-content: flex-end;
}
.divide-y {
  :where(& > :not(:last-child)) {
    --tw-divide-y-reverse: 0;
    border-bottom-style: var(--tw-border-style);
    border-top-style: var(--tw-border-style);
    border-top-width: calc(1px * var(--tw-divide-y-reverse));
    border-bottom-width: calc(1px * calc(1 - var(--tw-divide-y-reverse)));
  }
}
.overflow-auto {
  overflow: auto;
}
.overflow-hidden {
  overflow: hidden;
}
.overflow-y-auto {
  overflow-y: auto;
}
.rounded-full {
  border-radius: calc(infinity * 1px);
}
.border {
  border-style: var(--tw-border-style);
  border-width: 1px;
}
.border-t {
  border-top-style: var(--tw-border-style);
  border-top-width: 1px;
}
.border-b {
  border-bottom-style: var(--tw-border-style);
  border-bottom-width: 1px;
}
.border-transparent {
  border-color: transparent;
}
.bg-transparent {
  background-color: transparent;
}
.text-center {
  text-align: center;
}
.leading-none {
  --tw-leading: 1;
  line-height: 1;
}
.whitespace-nowrap {
  white-space: nowrap;
}
.italic {
  font-style: italic;
}
.underline-offset-4 {
  text-underline-offset: 4px;
}
.opacity-70 {
  opacity: 70%;
}
.ring {
  --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentColor);
  box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
}
.outline {
  outline-style: var(--tw-outline-style);
  outline-width: 1px;
}
.transition-\[color\,box-shadow\] {
  transition-property: color,box-shadow;
  transition-timing-function: var(--tw-ease, ease);
  transition-duration: var(--tw-duration, 0s);
}
.transition-colors {
  transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
  transition-timing-function: var(--tw-ease, ease);
  transition-duration: var(--tw-duration, 0s);
}
.transition-transform {
  transition-property: transform, translate, scale, rotate;
  transition-timing-function: var(--tw-ease, ease);
  transition-duration: var(--tw-duration, 0s);
}
.duration-100 {
  --tw-duration: 100ms;
  transition-duration: 100ms;
}
.outline-none {
  --tw-outline-style: none;
  outline-style: none;
}
.peer-disabled\:cursor-not-allowed {
  &:is(:where(.peer):disabled ~ *) {
    cursor: not-allowed;
  }
}
.peer-disabled\:opacity-70 {
  &:is(:where(.peer):disabled ~ *) {
    opacity: 70%;
  }
}
.file\:inline-flex {
  &::file-selector-button {
    display: inline-flex;
  }
}
.file\:border-0 {
  &::file-selector-button {
    border-style: var(--tw-border-style);
    border-width: 0px;
  }
}
.file\:bg-transparent {
  &::file-selector-button {
    background-color: transparent;
  }
}
.hover\:translate-y-\[-2px\] {
  &:hover {
    @media (hover: hover) {
      --tw-translate-y: -2px;
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
}
.hover\:underline {
  &:hover {
    @media (hover: hover) {
      text-decoration-line: underline;
    }
  }
}
.focus\:ring-2 {
  &:focus {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentColor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
}
.focus\:outline-none {
  &:focus {
    --tw-outline-style: none;
    outline-style: none;
  }
}
.focus-visible\:ring-\[3px\] {
  &:focus-visible {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentColor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
}
.disabled\:pointer-events-none {
  &:disabled {
    pointer-events: none;
  }
}
.disabled\:cursor-not-allowed {
  &:disabled {
    cursor: not-allowed;
  }
}
.disabled\:opacity-50 {
  &:disabled {
    opacity: 50%;
  }
}
.\[\&_svg\]\:pointer-events-none {
  & svg {
    pointer-events: none;
  }
}
.\[\&_svg\]\:shrink-0 {
  & svg {
    flex-shrink: 0;
  }
}
.\[\&\>svg\]\:pointer-events-none {
  &>svg {
    pointer-events: none;
  }
}
* {
  box-sizing: border-box;
  padding: 0;
  margin: 0;
}
html, body {
  font-family: -apple-system, BlinkMacSystemFont, system-ui, sans-serif;
  font-size: 15px;
  max-width: 100vw;
  overflow-x: hidden;
}
a {
  color: inherit;
  text-decoration: none;
}
button {
  font-size: 1rem;
  font-family: inherit;
}
@layer base {
  :root {
    --background: 100% 0 0;
    --foreground: 14.1% 0.005 285.823;
    --card: 100% 0 0;
    --card-foreground: 14.1% 0.005 285.823;
    --popover: 100% 0 0;
    --popover-foreground: 14.1% 0.005 285.823;
    --primary: 21% 0.006 285.885;
    --primary-foreground: 98.5% 0 0;
    --secondary: 96.7% 0.001 286.375;
    --secondary-foreground: 21% 0.006 285.885;
    --muted: 96.7% 0.001 286.375;
    --muted-foreground: 55.2% 0.016 285.938;
    --accent: 96.7% 0.001 286.375;
    --accent-foreground: 21% 0.006 285.885;
    --destructive: 57.7% 0.245 27.325;
    --destructive-foreground: 98.5% 0 0;
    --border: 92% 0.004 286.32;
    --input: 92% 0.004 286.32;
    --ring: 70.5% 0.015 286.067;
    --radius: 0.625rem;
  }
  .dark {
    --background: 14.1% 0.005 285.823;
    --foreground: 98.5% 0 0;
    --card: 14.1% 0.005 285.823;
    --card-foreground: 98.5% 0 0;
    --popover: 14.1% 0.005 285.823;
    --popover-foreground: 98.5% 0 0;
    --primary: 98.5% 0 0;
    --primary-foreground: 21% 0.006 285.885;
    --secondary: 27.4% 0.006 286.033;
    --secondary-foreground: 98.5% 0 0;
    --muted: 27.4% 0.006 286.033;
    --muted-foreground: 70.5% 0.015 286.067;
    --accent: 27.4% 0.006 286.033;
    --accent-foreground: 98.5% 0 0;
    --destructive: 39.6% 0.141 25.723;
    --destructive-foreground: 63.7% 0.237 25.331;
    --border: 27.4% 0.006 286.033;
    --input: 27.4% 0.006 286.033;
    --ring: 44.2% 0.017 285.786;
  }
}
@property --tw-divide-y-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-leading {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0px;
}
@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}
@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-outline-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-duration {
  syntax: "*";
  inherits: false;
}
@property --tw-translate-x {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-y {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-z {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
